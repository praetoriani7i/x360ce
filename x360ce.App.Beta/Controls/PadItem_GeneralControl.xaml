<UserControl
	x:Class="x360ce.App.Controls.PadItem_GeneralControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:x360ce.App.Controls"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:conv="clr-namespace:x360ce.App.Controls"
	x:Name="This"
	d:Height="600"
	d:Width="1200"
	Loaded="UserControl_Loaded"
	Unloaded="UserControl_Unloaded"
	mc:Ignorable="d">

	<UserControl.Resources>
		<ResourceDictionary>
				<!-- MergedDictionaries -->
				<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary>
					<!-- Converter -->
					<conv:ContainsKeywordConverterType x:Key="ContainsKeywordConverterType" />
					<!--  Invert Button -->
					<Style x:Key="Button_Invert" TargetType="Button" BasedOn="{StaticResource Button_Default}">
						<Setter Property="Width" Value="25" />
						<Setter Property="Height" Value="25" />
						<Setter Property="Margin" Value="0,3,3,3" />
						<Setter Property="ToolTip" Value="Invert" />
						<Setter Property="Background" Value="{StaticResource BackgroundDark}" />
						<Setter Property="Visibility" Value="Collapsed" />
						<Setter Property="Content" Value="{x:Null}" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding Tag.Text, RelativeSource={RelativeSource Self}, Converter={StaticResource ContainsKeywordConverterType}}" Value="Button">
								<Setter Property="Content" Value="{StaticResource Icon_DragAndDrop_Button}" />
								<Setter Property="Visibility" Value="Visible" />
							</DataTrigger>
							<DataTrigger Binding="{Binding Tag.Text, RelativeSource={RelativeSource Self}, Converter={StaticResource ContainsKeywordConverterType}}" Value="IButton">
								<Setter Property="Content" Value="{StaticResource Icon_DragAndDrop_Button_Inverted}" />
								<Setter Property="Visibility" Value="Visible" />
							</DataTrigger>
							<DataTrigger Binding="{Binding Tag.Text, RelativeSource={RelativeSource Self}, Converter={StaticResource ContainsKeywordConverterType}}" Value="Axis">
								<Setter Property="Content" Value="{StaticResource Icon_DragAndDrop_Axis}" />
								<Setter Property="Visibility" Value="Visible" />
							</DataTrigger>
							<DataTrigger Binding="{Binding Tag.Text, RelativeSource={RelativeSource Self}, Converter={StaticResource ContainsKeywordConverterType}}" Value="IAxis">
								<Setter Property="Content" Value="{StaticResource Icon_DragAndDrop_Axis_Inverted}" />
								<Setter Property="Visibility" Value="Visible" />
							</DataTrigger>
							<DataTrigger Binding="{Binding Tag.Text, RelativeSource={RelativeSource Self}, Converter={StaticResource ContainsKeywordConverterType}}" Value="HAxis">
								<Setter Property="Content" Value="{StaticResource Icon_DragAndDrop_Axis_Half}" />
								<Setter Property="Visibility" Value="Visible" />
							</DataTrigger>
							<DataTrigger Binding="{Binding Tag.Text, RelativeSource={RelativeSource Self}, Converter={StaticResource ContainsKeywordConverterType}}" Value="IHAxis">
								<Setter Property="Content" Value="{StaticResource Icon_DragAndDrop_Axis_Half_Inverted}" />
								<Setter Property="Visibility" Value="Visible" />
							</DataTrigger>
							<DataTrigger Binding="{Binding Tag.Text, RelativeSource={RelativeSource Self}, Converter={StaticResource ContainsKeywordConverterType}}" Value="Slider">
								<Setter Property="Content" Value="{StaticResource Icon_DragAndDrop_Axis}" />
								<Setter Property="Visibility" Value="Visible" />
							</DataTrigger>
							<DataTrigger Binding="{Binding Tag.Text, RelativeSource={RelativeSource Self}, Converter={StaticResource ContainsKeywordConverterType}}" Value="ISlider">
								<Setter Property="Content" Value="{StaticResource Icon_DragAndDrop_Axis_Inverted}" />
								<Setter Property="Visibility" Value="Visible" />
							</DataTrigger>
							<DataTrigger Binding="{Binding Tag.Text, RelativeSource={RelativeSource Self}, Converter={StaticResource ContainsKeywordConverterType}}" Value="HSlider">
								<Setter Property="Content" Value="{StaticResource Icon_DragAndDrop_Axis_Half}" />
								<Setter Property="Visibility" Value="Visible" />
							</DataTrigger>
							<DataTrigger Binding="{Binding Tag.Text, RelativeSource={RelativeSource Self}, Converter={StaticResource ContainsKeywordConverterType}}" Value="IHSlider">
								<Setter Property="Content" Value="{StaticResource Icon_DragAndDrop_Axis_Half_Inverted}" />
								<Setter Property="Visibility" Value="Visible" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
					<!--  Drag and Drop menu GroupBox  -->
					<Style x:Key="DragAndDropGroupBox" BasedOn="{StaticResource GroupBox_Default}" TargetType="GroupBox">
						<Setter Property="Margin" Value="0,-1,0,0" />
						<Setter Property="Padding" Value="5,0,2,3" />
					</Style>
					<!--  Drag and Drop menu Input Label  -->
					<Style x:Key="DragAndDropDInputBorder" TargetType="Border">
						<Setter Property="Margin" Value="3,3,3,0" />
						<Setter Property="VerticalAlignment" Value="Top" />
						<Setter Property="IsHitTestVisible" Value="False" />
						<Setter Property="CornerRadius" Value="5" />
						<Setter Property="Background" Value="{StaticResource BackgroundDark}" />
					</Style>
					<Style x:Key="DragAndDropDInputLabel1" TargetType="Label">
						<Setter Property="HorizontalAlignment" Value="Center" />
						<Setter Property="Padding" Value="4,2,4,4" />
						<Setter Property="IsHitTestVisible" Value="False" />
						<Setter Property="Content" Value="STEP 3 - Drag and drop labels into text boxes." />
					</Style>
					<Style x:Key="DragAndDropDInputLabel2" TargetType="Label">
						<Setter Property="HorizontalAlignment" Value="Center" />
						<Setter Property="Padding" Value="0,0,0,4" />
						<Setter Property="IsHitTestVisible" Value="False" />
						<Setter Property="Content" Value="Selected Device Input • Drag and drop labels into text boxes" />
					</Style>
					<Style x:Key="DragAndDropXInputBorder" TargetType="Border">
						<Setter Property="Margin" Value="0,2,0,0" />
						<Setter Property="HorizontalAlignment" Value="Center" />
						<Setter Property="VerticalAlignment" Value="Top" />
						<Setter Property="IsHitTestVisible" Value="False" />
						<Setter Property="CornerRadius" Value="5" />
						<Setter Property="Background" Value="{StaticResource BackgroundDark}" />
					</Style>
					<Style x:Key="DragAndDropXInputLabel" TargetType="Label">
						<Setter Property="HorizontalAlignment" Value="Center" />
						<Setter Property="Padding" Value="7,2,8,3" />
						<Setter Property="IsHitTestVisible" Value="False" />
						<Setter Property="Content" Value="Virtual Xbox Input" />
					</Style>
					<!--  Drag and Drop menu Title Label  -->
					<Style x:Key="DragAndDropDInputTitleLabel" TargetType="Label">
						<Setter Property="Margin" Value="0" />
						<Setter Property="Padding" Value="0" />
						<Setter Property="HorizontalAlignment" Value="Center" />
						<Setter Property="Opacity" Value="0.3" />
						<Setter Property="IsHitTestVisible" Value="False" />
						<Setter Property="Content" Value="Drag and Drop Menu" />
						<Setter Property="Visibility" Value="Collapsed" />
					</Style>
					<!--  Drag and Drop menu "Loading..." Label  -->
					<Style x:Key="DragAndDropLoadingLabel" TargetType="Label">
						<Setter Property="Margin" Value="0,20,0,0" />
						<Setter Property="Padding" Value="9,3,9,6" />
						<Setter Property="HorizontalAlignment" Value="Center" />
						<Setter Property="IsHitTestVisible" Value="False" />
						<Setter Property="Content" Value="Loading..." />
					</Style>
					<!--  Drag and Drop menu Label  -->
					<Style x:Key="DragAndDropLabel" TargetType="Label">
						<Setter Property="IsHitTestVisible" Value="True" />
						<Setter Property="Background" Value="{StaticResource BackgroundDark}" />
						<Setter Property="Padding" Value="5,3,5,3" />
						<Setter Property="Margin" Value="0,0,3,3" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="Label">
									<Border Name="MouseOverBorder" Background="{StaticResource BackgroundDark}" CornerRadius="5">
										<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" CornerRadius="5">
											<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
										</Border>
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter TargetName="MouseOverBorder" Property="Background" Value="{StaticResource BackgroundDarkSelected}" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
					<!--  StackPanel  -->
					<Style x:Key="StackPanelRight" TargetType="StackPanel">
						<Setter Property="HorizontalAlignment" Value="Right" />
						<Setter Property="Orientation" Value="Horizontal" />
					</Style>
					<Style x:Key="StackPanelLeft" TargetType="StackPanel">
						<Setter Property="HorizontalAlignment" Value="Left" />
						<Setter Property="Orientation" Value="Horizontal" />
					</Style>
					<!--  Grid  -->
					<Style x:Key="RecordClearGridLeft" TargetType="Grid">
						<Setter Property="HorizontalAlignment" Value="Left" />
						<Setter Property="Background" Value="Transparent" />
						<Setter Property="IsHitTestVisible" Value="True" />
						<EventSetter Event="MouseEnter" Handler="RecordClear_MouseEnter" />
						<EventSetter Event="MouseLeave" Handler="RecordClear_MouseLeave" />
					</Style>
					<Style x:Key="RecordClearGridRight" BasedOn="{StaticResource RecordClearGridLeft}" TargetType="Grid">
						<Setter Property="HorizontalAlignment" Value="Right" />
					</Style>
					<!--  TextBox  -->
					<Style BasedOn="{StaticResource TextBox_Default}" TargetType="TextBox">
						<Setter Property="Width" Value="75" />
						<Setter Property="AllowDrop" Value="True" />
						<EventSetter Event="PreviewDrop" Handler="DragAndDropMenu_Target_Drop" />
						<EventSetter Event="MouseEnter" Handler="RecordClear_MouseEnterTextBox" />
					</Style>
				</ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid Margin="3">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition Width="220" />
			<ColumnDefinition MinWidth="280" Width="*" />
			<ColumnDefinition Width="220" />
		</Grid.ColumnDefinitions>
		<Border Grid.Column="2" Style="{StaticResource DragAndDropXInputBorder}">
			<Label Style="{StaticResource DragAndDropXInputLabel}" />
		</Border>
		
		<!--  Buttons and Axes  -->
		<StackPanel Grid.RowSpan="3" >

			<TabControl Width="260" Margin="0,0,3,0">
				<TabItem>
					<TabItem.Header>
						<StackPanel Orientation="Horizontal">
							<ContentControl Name="NormalTab" Margin="0,0,3,0" Content="{StaticResource Icon_DragAndDrop_Axis}" />
							<TextBlock Text="NORMAL" />
							<ContentControl Name="InvertedTab" Margin="20,0,3,0" Content="{StaticResource Icon_DragAndDrop_Axis_Inverted}" />
							<TextBlock Text="INVERTED" />
							</StackPanel>
					</TabItem.Header>
					<ScrollViewer VerticalScrollBarVisibility="Auto">
						<StackPanel>
							<Label Style="{StaticResource DragAndDropDInputTitleLabel}" />

							<!-- Drag and Drop Help -->
							<Border Style="{StaticResource BorderDescriptionNormal}" Margin="3,3,3,0">
								<Label Style="{StaticResource DragAndDropDInputLabel1}" HorizontalAlignment="Center" />
							</Border>

							<StackPanel Name="DragAndDropStackPanelNormal" Margin="3,0,3,3">
								<StackPanel.Resources>
									<Style BasedOn="{StaticResource DragAndDropGroupBox}" TargetType="GroupBox" />
									<Style BasedOn="{StaticResource DragAndDropLabel}" TargetType="Label" />
								</StackPanel.Resources>
								<Label Style="{StaticResource DragAndDropLoadingLabel}" />
							</StackPanel>
						</StackPanel>
					</ScrollViewer>
				</TabItem>
			</TabControl>
		</StackPanel>

		<!--  Image  -->
		<Viewbox
			Grid.Column="1"
			Grid.ColumnSpan="3"
			Width="Auto"
			Height="400"
			Margin="0,20,0,0">
			<local:PadItem_General_XboxImageControl x:Name="XboxImage" VerticalAlignment="Top" />
		</Viewbox>

		<!--  LEFT  -->
		<StackPanel Grid.Column="1">
			<StackPanel Margin="0,3,0,3" Style="{StaticResource StackPanelLeft}">
				<Label
					Name="TriggerLDInputLabel"
					Width="34"
					Margin="6,0,0,0"
					Content="0"
					Foreground="Green"
					ToolTip="Y" />
				<Label
					Name="TriggerLDeadzoneLabel"
					Width="34"
					HorizontalContentAlignment="Right"
					Content="0"
					Opacity="0.3"
					ToolTip="Deadzone" />
				<Label
					Name="TriggerLeftXInputLabel"
					Margin="6,0,0,0"
					Content="0"
					Foreground="Blue"
					ToolTip="Y" />
			</StackPanel>
			<!--  LeftTrigger  -->
			<Grid Style="{StaticResource RecordClearGridLeft}">
				<StackPanel Style="{StaticResource StackPanelLeft}">
					<TextBox Name="TriggerLTextBox" x:FieldModifier="public" Margin="3,3,3,3"/>
					<Button Name="TriggerLInvertButton" Tag="{Binding ElementName=TriggerLTextBox}" Margin="0,0,3,0" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" />

					<!--  Record and Clear Buttons.  -->
					<StackPanel Name="RCStackPanel" Background="{StaticResource BackgroundLight}" Orientation="Horizontal">
						<Button Name="RecordButton" Click="RecordButton_Click" ToolTip="Record" Margin="0,0,3,0">
							<!--<ContentControl Content="{StaticResource Icon_Record}" />-->
							<Border
									Width="14"
									Height="14"
									Margin="1"
									Background="{StaticResource ColorRecord}"
									CornerRadius="8" />
						</Button>
						<Button Name="ClearButton" Margin="0,0,3,0" Click="ClearButton_Click" ToolTip="Clear" Visibility="Visible">
							<ContentControl Content="{StaticResource Icon_broom}" />
						</Button>
					</StackPanel>
					
					<!--Label-->
					<Label Name="TriggerLLabel" Content="Trigger" IsHitTestVisible="False" Margin="0" />
				</StackPanel>



			</Grid>
			<!--  LeftShoulder  -->
			<Grid Style="{StaticResource RecordClearGridLeft}">
				<StackPanel Style="{StaticResource StackPanelLeft}">
					<!--<Menu Tag="{Binding ElementName=BumperLTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
					<TextBox Name="BumperLTextBox" x:FieldModifier="public" />
					<Button Name="BumperLInvertButton" Tag="{Binding ElementName=BumperLTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" />
					<Label Name="BumperLLabel" Content="Bumper" />
				</StackPanel>
			</Grid>
			<!--  ButtonBack  -->
			<Grid Margin="0,15,0,0" Style="{StaticResource RecordClearGridLeft}">
				<StackPanel Style="{StaticResource StackPanelLeft}">
					<!--<Menu Tag="{Binding ElementName=MenuBackTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
					<TextBox Name="MenuBackTextBox" x:FieldModifier="public" />
					<Button Name="MenuBackInvertButton" Tag="{Binding ElementName=MenuBackTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" />
					<Label Name="MenuBackLabel" Content="Back" />
				</StackPanel>
			</Grid>
			<!--  ButtonStart  -->
			<Grid Style="{StaticResource RecordClearGridLeft}">
				<StackPanel Style="{StaticResource StackPanelLeft}">
					<!--<Menu Tag="{Binding ElementName=MenuStartTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
					<TextBox Name="MenuStartTextBox" x:FieldModifier="public" />
					<Button Name="MenuStartInvertButton" Tag="{Binding ElementName=MenuStartTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" />
					<Label Name="MenuStartLabel" Content="Start" />
				</StackPanel>
			</Grid>
			<!--  ButtonGuide  -->
			<Grid Style="{StaticResource RecordClearGridLeft}">
				<StackPanel Style="{StaticResource StackPanelLeft}">
					<!--<Menu Tag="{Binding ElementName=MenuGuideTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
					<TextBox Name="MenuGuideTextBox" x:FieldModifier="public" />
					<Button Name="MenuGuideInvertButton" Tag="{Binding ElementName=MenuGuideTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" />
					<Label Name="MenuGuideLabel" Content="Guide" />
				</StackPanel>
			</Grid>
			<!--  DPad  -->
			<Grid Style="{StaticResource RecordClearGridLeft}">
				<StackPanel Style="{StaticResource StackPanelLeft}">
					<!--<Menu Tag="{Binding ElementName=DPadTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
					<TextBox Name="DPadTextBox" x:FieldModifier="public" />
					<Label Name="DPadLabel" Content="D-Pad" />
				</StackPanel>
			</Grid>
			<!--  LeftThumb  -->
			<StackPanel Margin="0,3,0,0" Style="{StaticResource StackPanelLeft}">
				<Label
					Name="StickLAxisXDInputLabel"
					Width="34"
					Margin="6,0,0,0"
					Content="0"
					Foreground="Green"
					ToolTip="Y" />
				<Label
					Name="StickLDeadzoneXLabel"
					Width="34"
					HorizontalContentAlignment="Right"
					Content="0"
					Opacity="0.3"
					ToolTip="Deadzone" />
				<Label
					Name="StickLXInputAxisXLabel"
					Margin="6,0,0,0"
					Content="0"
					Foreground="Blue"
					ToolTip="Y" />
			</StackPanel>
			<StackPanel Margin="0,0,0,3" Style="{StaticResource StackPanelLeft}">
				<Label
					Name="StickLAxisYDInputLabel"
					Width="34"
					Margin="6,0,0,0"
					Content="0"
					Foreground="Green"
					ToolTip="Y" />
				<Label
					Name="StickLDeadzoneYLabel"
					Width="34"
					HorizontalContentAlignment="Right"
					Content="0"
					Opacity="0.3"
					ToolTip="Deadzone" />
				<Label
					Name="StickLXInputAxisYLabel"
					Margin="6,0,0,0"
					Content="0"
					Foreground="Blue"
					ToolTip="Y" />
			</StackPanel>
			<!--  LeftThumbAxisX  -->
			<Grid Style="{StaticResource RecordClearGridLeft}">
				<StackPanel Style="{StaticResource StackPanelLeft}">
					<!--<Menu Tag="{Binding ElementName=StickLAxisXTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
					<TextBox Name="StickLAxisXTextBox" x:FieldModifier="public" />
					<Button Name="StickLAxisXInvertButton" Tag="{Binding ElementName=StickLAxisXTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" />
					<Label Name="StickLAxisXLabel" Content="Stick Axis X" />
				</StackPanel>
			</Grid>
			<!--  LeftThumbAxisY  -->
			<Grid Style="{StaticResource RecordClearGridLeft}">
				<StackPanel Style="{StaticResource StackPanelLeft}">
					<!--<Menu Tag="{Binding ElementName=StickLAxisYTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
					<TextBox Name="StickLAxisYTextBox" x:FieldModifier="public" />
					<Button Name="StickLAxisYInvertButton" Tag="{Binding ElementName=StickLAxisYTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" />
					<Label Name="StickLAxisYLabel" Content="Stick Axis Y" />
				</StackPanel>
			</Grid>
			<!--  LeftThumbButton  -->
			<Grid Style="{StaticResource RecordClearGridLeft}">
				<StackPanel Style="{StaticResource StackPanelLeft}">
					<!--<Menu Tag="{Binding ElementName=StickLButtonTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
					<TextBox Name="StickLButtonTextBox" x:FieldModifier="public" />
					<Button Name="StickLButtonInvertButton" Tag="{Binding ElementName=StickLButtonTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" />
					<Label Name="StickLButtonLabel" Content="Stick Button" />
				</StackPanel>
			</Grid>
		</StackPanel>
		<!--  Stick Left  -->
		<StackPanel Grid.Row="2" Grid.Column="1">
			<!--  LeftThumbUp  -->
			<Grid Style="{StaticResource RecordClearGridLeft}">
				<StackPanel Style="{StaticResource StackPanelLeft}">
					<!--<Menu Tag="{Binding ElementName=StickLUpTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
					<TextBox Name="StickLUpTextBox" x:FieldModifier="public" />
					<Button Name="StickLUpInvertButton" Tag="{Binding ElementName=StickLUpTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" />
					<Label Name="StickLUpLabel" Content="Stick Up" />
				</StackPanel>
			</Grid>
			<!--  LeftThumbLeft  -->
			<Grid Style="{StaticResource RecordClearGridLeft}">
				<StackPanel Style="{StaticResource StackPanelLeft}">
					<!--<Menu Tag="{Binding ElementName=StickLLeftTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
					<TextBox Name="StickLLeftTextBox" x:FieldModifier="public" />
					<Button Name="StickLLeftInvertButton" Tag="{Binding ElementName=StickLLeftTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" />
					<Label Name="StickLLeftLabel" Content="Stick Left" />
				</StackPanel>
			</Grid>
			<!--  LeftThumbRight  -->
			<Grid Style="{StaticResource RecordClearGridLeft}">
				<StackPanel Style="{StaticResource StackPanelLeft}">
					<!--<Menu Tag="{Binding ElementName=StickLRightTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
					<TextBox Name="StickLRightTextBox" x:FieldModifier="public" />
					<Button Name="StickLRightInvertButton" Tag="{Binding ElementName=StickLRightTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" />
					<Label Name="StickLRightLabel" Content="Stick Right" />
				</StackPanel>
			</Grid>
			<!--  LeftThumbDown  -->
			<Grid Style="{StaticResource RecordClearGridLeft}">
				<StackPanel Style="{StaticResource StackPanelLeft}">
					<!--<Menu Tag="{Binding ElementName=StickLDownTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
					<TextBox Name="StickLDownTextBox" x:FieldModifier="public" />
					<Button Name="StickLDownInvertButton" Tag="{Binding ElementName=StickLDownTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" />
					<Label Name="StickLDownLabel" Content="Stick Down" />
				</StackPanel>
			</Grid>
		</StackPanel>
		<!--  DPad  -->
		<StackPanel Grid.Row="2" Grid.Column="2" HorizontalAlignment="Center" Width="200" Margin="70,0,0,0">
			<!--  DPadUp  -->
			<Grid Style="{StaticResource RecordClearGridLeft}">
				<StackPanel Style="{StaticResource StackPanelLeft}">
					<TextBox Name="DPadUpTextBox" x:FieldModifier="public" />
					<Button Name="DPadUpInvertButton" Tag="{Binding ElementName=DPadUpTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" />
					<Label Name="DPadUpLabel" Content="D-Pad Up" />
					<!--<Menu Tag="{Binding ElementName=DPadUpTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
				</StackPanel>
			</Grid>
			<!--  DPadLeft  -->
			<Grid Style="{StaticResource RecordClearGridLeft}">
				<StackPanel Style="{StaticResource StackPanelLeft}">
					<TextBox Name="DPadLeftTextBox" x:FieldModifier="public" />
					<Button Name="DPadLeftInvertButton" Tag="{Binding ElementName=DPadLeftTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" />
					<Label Name="DPadLeftLabel" Content="D-Pad Left" />
					<!--<Menu Tag="{Binding ElementName=DPadLeftTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
				</StackPanel>
			</Grid>
			<!--  DPadRight  -->
			<Grid Style="{StaticResource RecordClearGridLeft}">
				<StackPanel Style="{StaticResource StackPanelLeft}">
					<TextBox Name="DPadRightTextBox" x:FieldModifier="public" />
					<Button Name="DPadRightInvertButton" Tag="{Binding ElementName=DPadRightTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" />
					<Label Name="DPadRightLabel" Content="D-Pad Right" />
					<!--<Menu Tag="{Binding ElementName=DPadRightTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
				</StackPanel>
			</Grid>
			<!--  DPadDown  -->
			<Grid Style="{StaticResource RecordClearGridLeft}">
				<StackPanel Style="{StaticResource StackPanelLeft}">
					<TextBox Name="DPadDownTextBox" x:FieldModifier="public" />
					<Button Name="DPadDownInvertButton" Tag="{Binding ElementName=DPadDownTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" />
					<Label Name="DPadDownLabel" Content="D-Pad Down" />
					<!--<Menu Tag="{Binding ElementName=DPadDownTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
				</StackPanel>
			</Grid>
		</StackPanel>
		<!--  RIGHT  -->
		<StackPanel Grid.Column="3">
			<!--  RIGHT  -->
			<StackPanel Margin="0,3,0,3" Style="{StaticResource StackPanelRight}">
				<Label
					Name="TriggerRightXInputLabel"
					Margin="0,0,6,0"
					Content="0"
					Foreground="Blue"
					ToolTip="Y" />
				<Label
					Name="TriggerRDeadzoneLabel"
					Width="34"
					Content="0"
					Opacity="0.3"
					ToolTip="Deadzone" />
				<Label
					Name="TriggerRDInputLabel"
					Width="34"
					Margin="0,0,6,0"
					HorizontalContentAlignment="Right"
					Content="0"
					Foreground="Green"
					ToolTip="Y" />
			</StackPanel>
			<!--  RightTrigger  -->
			<Grid Style="{StaticResource RecordClearGridRight}">
				<StackPanel Style="{StaticResource StackPanelRight}">
					<Label Name="TriggerRLabel" Content="Trigger" />
					<Button Name="TriggerRInvertButton" Tag="{Binding ElementName=TriggerRTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" Margin="3,0,0,0" />
					<TextBox Name="TriggerRTextBox" x:FieldModifier="public" />
					<!--<Menu Tag="{Binding ElementName=TriggerRTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
				</StackPanel>
			</Grid>
			<!--  RightShoulder  -->
			<Grid Style="{StaticResource RecordClearGridRight}">
				<StackPanel Style="{StaticResource StackPanelRight}">
					<Label Name="BumperRLabel" Content="Bumper" />
					<Button Name="BumperRInvertButton" Tag="{Binding ElementName=BumperRTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" Margin="3,0,0,0" />
					<TextBox Name="BumperRTextBox" x:FieldModifier="public" />
					<!--<Menu Tag="{Binding ElementName=BumperRTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
				</StackPanel>
			</Grid>
			<!--  ButtonY  -->
			<Grid Margin="0,15,0,0" Style="{StaticResource RecordClearGridRight}">
				<StackPanel Style="{StaticResource StackPanelRight}">
					<Label Name="ActionYLabel" Content="Y Button" />
					<Button Name="ActionYInvertButton" Tag="{Binding ElementName=ActionYTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" Margin="3,0,0,0" />
					<TextBox Name="ActionYTextBox" x:FieldModifier="public" />
					<!--<Menu Tag="{Binding ElementName=ActionYTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
				</StackPanel>
			</Grid>
			<!--  ButtonX  -->
			<Grid Style="{StaticResource RecordClearGridRight}">
				<StackPanel Style="{StaticResource StackPanelRight}">
					<Label Name="ActionXLabel" Content="X Button" />
					<Button Name="ActionXInvertButton" Tag="{Binding ElementName=ActionXTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" Margin="3,0,0,0" />
					<TextBox Name="ActionXTextBox" x:FieldModifier="public" />
					<!--<Menu Tag="{Binding ElementName=ActionXTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
				</StackPanel>
			</Grid>
			<!--  ButtonB  -->
			<Grid Style="{StaticResource RecordClearGridRight}">
				<StackPanel Style="{StaticResource StackPanelRight}">
					<Label Name="ActionBLabel" Content="B Button" />
					<Button Name="ActionBInvertButton" Tag="{Binding ElementName=ActionBTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" Margin="3,0,0,0" />
					<TextBox Name="ActionBTextBox" x:FieldModifier="public" />
					<!--<Menu Tag="{Binding ElementName=ActionBTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
				</StackPanel>
			</Grid>
			<!--  ButtonA  -->
			<Grid Style="{StaticResource RecordClearGridRight}">
				<StackPanel Style="{StaticResource StackPanelRight}">
					<Label Name="ActionALabel" Content="A Button" />
					<Button Name="ActionAInvertButton" Tag="{Binding ElementName=ActionATextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" Margin="3,0,0,0" />
					<TextBox Name="ActionATextBox" x:FieldModifier="public" />
					<!--<Menu Tag="{Binding ElementName=ActionATextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
				</StackPanel>
			</Grid>
			<!--  RightThumb  -->
			<StackPanel Margin="0,3,0,0" Style="{StaticResource StackPanelRight}">
				<Label
					Name="StickRXInputAxisXLabel"
					Margin="0,0,6,0"
					Content="0"
					Foreground="Blue"
					ToolTip="Y" />
				<Label
					Name="StickRDeadzoneXLabel"
					Width="34"
					Content="0"
					Opacity="0.3"
					ToolTip="Deadzone" />
				<Label
					Name="StickRAxisXDInputLabel"
					Width="34"
					Margin="0,0,6,0"
					HorizontalContentAlignment="Right"
					Content="0"
					Foreground="Green"
					ToolTip="Y" />
			</StackPanel>
			<StackPanel Margin="0,0,0,3" Style="{StaticResource StackPanelRight}">
				<Label
					Name="StickRXInputAxisYLabel"
					Margin="0,0,6,0"
					Content="0"
					Foreground="Blue"
					ToolTip="Y" />
				<Label
					Name="StickRDeadzoneYLabel"
					Width="34"
					Content="0"
					Opacity="0.3"
					ToolTip="Deadzone" />
				<Label
					Name="StickRAxisYDInputLabel"
					Width="34"
					Margin="0,0,6,0"
					HorizontalContentAlignment="Right"
					Content="0"
					Foreground="Green"
					ToolTip="Y" />
			</StackPanel>
			<!--  RightThumbAxisX  -->
			<Grid Style="{StaticResource RecordClearGridRight}">
				<StackPanel Style="{StaticResource StackPanelRight}">
					<Label Name="StickRAxisXLabel" Content="Stick Axis X" />
					<Button Name="StickRAxisXInvertButton" Tag="{Binding ElementName=StickRAxisXTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" Margin="3,0,0,0" />
					<TextBox Name="StickRAxisXTextBox" x:FieldModifier="public" />
					<!--<Menu Tag="{Binding ElementName=StickRAxisXTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
				</StackPanel>
			</Grid>
			<!--  RightThumbAxisY  -->
			<Grid Style="{StaticResource RecordClearGridRight}">
				<StackPanel Style="{StaticResource StackPanelRight}">
					<Label Name="StickRAxisYLabel" Content="Stick Axis Y" />
					<Button Name="StickRAxisYInvertButton" Tag="{Binding ElementName=StickRAxisYTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" Margin="3,0,0,0" />
					<TextBox Name="StickRAxisYTextBox" x:FieldModifier="public" />
					<!--<Menu Tag="{Binding ElementName=StickRAxisYTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
				</StackPanel>
			</Grid>
			<!--  RightThumbButton  -->
			<Grid Style="{StaticResource RecordClearGridRight}">
				<StackPanel Style="{StaticResource StackPanelRight}">
					<Label Name="StickRButtonLabel" Content="Stick Button" />
					<Button Name="StickRButtonInvertButton" Tag="{Binding ElementName=StickRButtonTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" Margin="3,0,0,0" />
					<TextBox Name="StickRButtonTextBox" x:FieldModifier="public" />
					<!--<Menu Tag="{Binding ElementName=StickRButtonTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
				</StackPanel>
			</Grid>
		</StackPanel>
		<!--  Stick Right  -->
		<StackPanel Grid.Row="2" Grid.Column="3">
			<!--  RightThumbUp  -->
			<Grid Style="{StaticResource RecordClearGridRight}">
				<StackPanel Style="{StaticResource StackPanelRight}">
					<Label Name="StickRUpLabel" Content="Stick Up" />
					<Button Name="StickRUpInvertButton" Tag="{Binding ElementName=StickRUpTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" Margin="3,0,0,0" />
					<TextBox Name="StickRUpTextBox" x:FieldModifier="public" />
					<!--<Menu Tag="{Binding ElementName=StickRUpTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
				</StackPanel>
			</Grid>
			<!--  RightThumbLeft  -->
			<Grid Style="{StaticResource RecordClearGridRight}">
				<StackPanel Style="{StaticResource StackPanelRight}">
					<Label Name="StickRLeftLabel" Content="Stick Left" />
					<Button Name="StickRLeftInvertButton" Tag="{Binding ElementName=StickRLeftTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" Margin="3,0,0,0" />
					<TextBox Name="StickRLeftTextBox" x:FieldModifier="public" />
					<!--<Menu Tag="{Binding ElementName=StickRLeftTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
				</StackPanel>
			</Grid>
			<!--  RightThumbRight  -->
			<Grid Style="{StaticResource RecordClearGridRight}">
				<StackPanel Style="{StaticResource StackPanelRight}">
					<Label Name="StickRRightLabel" Content="Stick Right" />
					<Button Name="StickRRightInvertButton" Tag="{Binding ElementName=StickRRightTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" Margin="3,0,0,0" />
					<TextBox Name="StickRRightTextBox" x:FieldModifier="public" />
					<!--<Menu Tag="{Binding ElementName=StickRRightTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
				</StackPanel>
			</Grid>
			<!--  RighthumbDown  -->
			<Grid Style="{StaticResource RecordClearGridRight}">
				<StackPanel Style="{StaticResource StackPanelRight}">
					<Label Name="StickRDownLabel" Content="Stick Down" />
					<Button Name="StickRDownInvertButton" Tag="{Binding ElementName=StickRDownTextBox}" Click="InvertButton_Click" Style="{StaticResource Button_Invert}" Margin="3,0,0,0" />
					<TextBox Name="StickRDownTextBox" x:FieldModifier="public" />
					<!--<Menu Tag="{Binding ElementName=StickRDownTextBox}" Template="{StaticResource ReusableMenuTemplate}" />-->
				</StackPanel>
			</Grid>
		</StackPanel>
	</Grid>
</UserControl>
